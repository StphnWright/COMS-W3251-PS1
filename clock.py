# -*- coding: utf-8 -*-
"""Copy of clock.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1wmoALpNnHLqeqsDtbolxFMsGuYxh9uIx

Copy this file to your Google Drive (File -> Save a copy in drive), then complete the assignment. When the assignment is complete, download this notebook as a .py file (File -> Download .py). Submit the completed file to gradescope with the filename "clock.py". For this problem, NumPy is permitted. However, the return types should be standard python types.
"""

import math

"""
location_at_minute takes in a float "min" between 0 and 60 inclusive and returns the 
location of the hour hand "min" minutes after noon as an array [h_x position, h_y position]. 
The output of this function must be a vector represented by python list of floats.
"""

def location_at_minute(min:float):
  one_minute = 2 * math.pi / 60
  radius = 0.5
  angle = one_minute * min;
  hour = angle / 12
  return [radius * math.sin(hour), radius * math.cos(hour)] 

print(location_at_minute(0))
print(location_at_minute(15))
print(location_at_minute(30))
print(location_at_minute(45))
print(location_at_minute(60))

"""
angle_at_minute taken in a float "min" between 0 and 60 inclusive and returns the
angle (in radians) between the minute hand and hour hand "min" minutes after noon.
The output of this function must be a float representing the angle between the two hands (in radians).
"""
import math
def angle_at_minute(min:float):
  one_minute = 2 * math.pi / 60;
  minute_angle = one_minute * min
  hour_angle = minute_angle / 12;
  return minute_angle - hour_angle

print(angle_at_minute(0))  
print(angle_at_minute(1))
print(angle_at_minute(15))
print(angle_at_minute(30))
print(angle_at_minute(45))
print(angle_at_minute(60))

"""
time_when_first_perpendicular calculates an approximation for the time at which
the hour hand and minute hand are first perpendicular after noon.
The output of this function must be an int representing the time to the nearest 
second when the hands are first perpendicular.
"""

def time_when_first_perpendicular():
  min = 10000
  seconds = 0
  print(math.pi / 2)
  for i in range(0, 3600):
    angle = angle_at_minute(i / 60)
    difference = abs(math.pi / 2 - angle)
    if difference < min:
      min = difference
      seconds = i

  return seconds

print(time_when_first_perpendicular())